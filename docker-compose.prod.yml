version: '3.7'

services:
  web:
    image: nginx:1.23
    depends_on:
      - server
    networks:
      - app
    ports:
      - 80:80
    configs:
      - source: NGINX_CONFIG
        target: /etc/nginx/conf.d/default.conf
      - source: NGINX_HTML
        target: /usr/share/nginx/html/index.html
    deploy:
      mode: global
      update_config:
        parallelism: 1
        order: start-first
        failure_action: rollback
        delay: 10s
      rollback_config:
        parallelism: 0
        order: stop-first
      restart_policy:
        condition: any
        delay: 10s
        max_attempts: 10
        window: 120s

  server:
    image: 127.0.0.1:5000/ts-server:1.0.0
    command: npm run start
    deploy:
      replicas: 3
      update_config:
        parallelism: 1
        order: start-first
        failure_action: rollback
        delay: 10s
      rollback_config:
        parallelism: 0
        order: stop-first
      restart_policy:
        condition: any
        delay: 10s
        max_attempts: 10
        window: 120s

  db:
    deploy:
      update_config:
        parallelism: 1
        order: start-first
        failure_action: rollback
        delay: 10s
      rollback_config:
        parallelism: 0
        order: stop-first
      restart_policy:
        condition: any
        delay: 10s
        max_attempts: 10
        window: 120s
      placement:
        constraints:
          - node.role == manager
    volumes:
      - db_prod:/var/lib/postgresql/data

  cache:
    deploy:
      update_config:
        parallelism: 1
        order: start-first
        failure_action: rollback
        delay: 10s
      rollback_config:
        parallelism: 0
        order: stop-first
      restart_policy:
        condition: any
        delay: 10s
        max_attempts: 10
        window: 120s
      placement:
        constraints:
          - node.role == manager
    volumes:
      - cache_prod:/data

volumes:
  db_prod:
    driver: local
  cache_prod:
    driver: local

networks:
  app:
    driver: overlay

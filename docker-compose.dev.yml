version: '3.7'

services:
  web:
    tty: true
    image: nginx:1.23
    depends_on:
      server:
        condition: service_healthy
    restart: unless-stopped
    networks:
      - app
    ports:
      - 80:80
    volumes:
      - ./nginx/default.conf:/etc/nginx/conf.d/default.conf
      - ./nginx/default.html:/usr/share/nginx/html/index.html

  server:
    tty: true
    depends_on:
      db:
        condition: service_healthy
      cache:
        condition: service_healthy
    build:
      context: .
      target: dev
    restart: unless-stopped
    networks:
      - app
    volumes:
      - /app/node_modules
      - ./:/app
    env_file:
      - .env
    command: npm run start:dev

  db:
    tty: true
    restart: unless-stopped
    volumes:
      - db_dev:/data/db
      - ./mongo-init.sh:/docker-entrypoint-initdb.d/mongo-init.sh:ro
      - ./dump:/dump
    env_file:
      - .env
    environment:
      - MONGO_INITDB_ROOT_USERNAME=$DB_ROOT_USERNAME
      - MONGO_INITDB_ROOT_PASSWORD=$DB_ROOT_PASSWORD
      - MONGO_INITDB_DATABASE=$DB_NAME
      - MONGO_USERNAME=$DB_USER
      - MONGO_PASSWORD=$DB_PASSWORD
    ports:
      - '$DB_PORT:27017'

  db-gui:
    image: mongoclient/mongoclient:4.0.0
    restart: unless-stopped
    depends_on:
      db:
        condition: service_healthy
    ports:
      - 8080:3000
    env_file:
      - .env
    environment:
      MONGO_URL: mongodb://$DB_USER:$DB_PASSWORD@$DB_HOST:$DB_PORT/$DB_NAME?ssl=false
    volumes:
      - db_gui_data:/data/db
    networks:
      - app

  cache:
    command: redis-server --appendonly yes --requirepass $REDIS_PASSWORD
    tty: true
    restart: unless-stopped
    ports:
      - $REDIS_PORT:6379
    volumes:
      - cache_dev:/data
    env_file:
      - .env

volumes:
  db_dev:
    driver: local
  db_gui_data:
    driver: local
  cache_dev:
    driver: local

networks:
  app:
    driver: bridge
